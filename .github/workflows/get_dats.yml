name: Get DATs

on:
  workflow_dispatch:
  schedule:
    # Run everyday at 8:00 UTC
    - cron:  '0 8 * * *'

defaults:
  run:
    shell: powershell
    working-directory: docs

env:
  DATS_DIR: "dats"
  WWW_URL: "https://alvaromunoz.github.io/auto-wwwdat"

# download in parallel jobs
# matrix to extract, rename, zip 1 by 1, create XML, in parallel jobs
# extract everything on separate steps
# each step creates its own index.xml (pointing to zip files)
# each step uploads artifacts
# one step gets all artifacts
# that same step publishes to git

jobs:
  no-intro:
    name: Download no-intro DATs
    runs-on: windows-latest

    steps:

      - name: Download no-intro DATs
        run: |
        
          $session = New-Object Microsoft.PowerShell.Commands.WebRequestSession
          $session.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.66 Safari/537.36 Edg/103.0.1264.44"

          $datomatic_download_page = Invoke-WebRequest -UseBasicParsing -Uri "https://datomatic.no-intro.org/index.php?page=download&s=64&op=daily" `
            -Method "POST" `
            -WebSession $session `
            -ContentType "application/x-www-form-urlencoded" `
            -Body "dat_type=standard&goooo=Prepare" `
            -MaximumRedirection 0 `
            -ErrorAction Ignore `
            -Headers @{
            "authority"       = "datomatic.no-intro.org"
            "method"          = "POST"
            "path"            = "/index.php?page=download&s=64&op=daily"
            "scheme"          = "https"
            "accept"          = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
            "accept-encoding" = "gzip, deflate, br"
            "cache-control"   = "max-age=0"
            "dnt"             = "1"
            "origin"          = "https://datomatic.no-intro.org"
            "referer"         = "https://datomatic.no-intro.org/index.php?page=download&s=64&op=daily"
          }
          $cookie_data = $datomatic_download_page.Headers.'Set-Cookie' -split ';' -match 'PHPSESSID.+' -split '='
          $session.Cookies.Add((New-Object System.Net.Cookie($cookie_data[0], $cookie_data[1], "/", "datomatic.no-intro.org")))
          $datomatic_download_page.RawContent -match "Location: (.+)"
          $datomatic_download_path = $Matches[1]

          $ProgressPreference = 'SilentlyContinue'
          $nointro_download_url = "https://datomatic.no-intro.org/{0}" -f $datomatic_download_path
          $nointro_download_dest = "./no-intro.zip"
          Invoke-WebRequest -UseBasicParsing -Uri $nointro_download_url `
            -Method "POST" `
            -WebSession $session `
            -ContentType "application/x-www-form-urlencoded" `
            -OutFile $nointro_download_dest `
            -Body "lazy_mode=Download" `
            -Headers @{
            "authority"       = "datomatic.no-intro.org"
            "method"          = "POST"
            "path"            = "/$datomatic_download_path"
            "scheme"          = "https"
            "accept"          = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
            "accept-encoding" = "gzip, deflate, br"
            "cache-control"   = "max-age=0"
            "dnt"             = "1"
            "origin"          = "https://datomatic.no-intro.org"
          }

      - name: Divide zip file
        run: |
          $temp_dir_name = "temp"
          if (Test-Path -Path $temp_dir_name) {
              Remove-Item $temp_dir_name -Recurse
          }
          $temp_dir = New-Item -Path $temp_dir_name -ItemType Directory
          
          $zip_file = Get-Item -Path "./no-intro.zip"
          $dats_dir = Get-Item -Path $temp_dir.FullName

          Expand-Archive -LiteralPath $zip_file.FullName -DestinationPath $dats_dir.FullName

          # Create individual zips
          $dat_files = Get-ChildItem -Path $dats_dir | Where-Object {$_.Name -match ".+\.dat"}
          foreach( $file in $dat_files ) {
            [XML]$xml_file = Get-Content -Path $file
            $name = $xmlfile.datafile.header.name
            $destination = $file.DirectoryName +"/"+ $xmlfile.datafile.header.name + ".zip"
            Compress-Archive -LiteralPath $file.FullName -DestinationPath $destination
          }

          echo "ZIP_FILEPATH=$dats_dir.FullName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      
      - name: Upload no-intro Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: no-intro_daily_zip
          path: ${{ env.ZIP_FILEPATH }}/*.zip
          if-no-files-found: error
          retention-days: 1

  redump:
    name: Download Redump DATs
    runs-on: windows-latest
    steps:
      - name: Download redump DATs
        run: |
          $redump_baseurl = "http://redump.org"
          $redump_download_page = Invoke-WebRequest -Uri "$redump_baseurl/downloads/"
          $redump_download_list = $redump_download_page.Links | Where-Object { $_.innerText -match "Datfile" } | Where-Object { $_.innerText -notmatch "BIOS Datfile" } | Select-Object href | Where-Object { $_ }

          foreach ($link in $redump_download_list) {
            
            $source = $redump_baseurl + $link.href
            $destination = "./" + ($link.href -split "/" | Where-Object { $_ } | Select-Object -Last 1) + ".zip"
            
            Invoke-WebRequest -UseBasicParsing -Uri "$source" `
              -OutFile "$destination" `
              -Headers @{
              "Accept"          = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
              "Accept-Encoding" = "gzip, deflate"
            }    
          }
          
          $zip_filepath = Get-Item "." | %{$_.FullName}
          echo "ZIP_FILEPATH=$zip_filepath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      
      - name: Upload redump Artifact
        uses: actions/upload-artifact@v3
        with:
          name: redump_daily_zips
          path: ${{ env.ZIP_FILEPATH }}/*.zip
          if-no-files-found: error
          retention-days: 1

  create_xml_files:
    name: Create XML files
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - provider: "no-intro"
            artifact: "no-intro_daily_zip"
          - provider: "redump"
            artifact: "redump_daily_zips"

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Artifacts
        uses: actions/download-artifact@v3

      - name: Get clrmamepro
        run: |
          $ProgressPreference = 'SilentlyContinue'
          $clrmamepro_download_url = [uri]"https://mamedev.emulab.it/clrmamepro/binaries/cmp4045_64.zip"
          $clrmamepro_download_dest = $clrmamepro_download_url.Segments[-1]
          $session = New-Object Microsoft.PowerShell.Commands.WebRequestSession
          $session.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.66 Safari/537.36 Edg/103.0.1264.44"
          Invoke-WebRequest -UseBasicParsing -Uri $clrmamepro_download_url `
          -WebSession $session `
          -OutFile $clrmamepro_download_dest `
          -Headers @{
          "Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
            "Accept-Encoding"="gzip, deflate, br"
            "Referer"="https://mamedev.emulab.it/clrmamepro/"
          }
          $clrmamepro_file = Get-Item $clrmamepro_download_dest
          $clrmamepro_dir = New-Item -Path "clrmamepro" -ItemType Directory
          Expand-Archive -LiteralPath $clrmamepro_file.FullName -DestinationPath $clrmamepro_dir.FullName

      - name: Clean DATs folders
        run: |
          if (Test-Path -Path "${{ env.DATS_DIR }}/${{ matrix.provider}}") {
              Remove-Item "${{ env.DATS_DIR }}/${{ matrix.provider}}" -Recurse
          }
          New-Item -Path "${{ env.DATS_DIR }}/${{ matrix.provider}}" -ItemType Directory

      - name: Create XML index (clrmamepro)
        run: |
          $dats_dir = Get-Content -Path "${{ env.DATS_DIR }}" | %{$_.Full}
          ./clrmamepro/cmpro64.exe /xml "${{ env.WWW_URL }}" "${{ env.DATS_DIR }}/${{ matrix.provider}}" "${{ env.DATS_DIR }}/${{ matrix.provider }}.xml"

      - name: Update dats on website
        run: |
          git config --global user.name 'Git bot'
          git config --global user.email 'bot@noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit -am "Auto updated dats"
          git push

